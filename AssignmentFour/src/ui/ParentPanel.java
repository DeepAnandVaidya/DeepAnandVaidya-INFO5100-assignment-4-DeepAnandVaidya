/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.stream.Collectors;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import model.City;
import model.Community;
import model.Encounter;
import model.EncounterHistory;
import model.House;
import model.Patient;
import model.PatientDirectory;
import model.Person;
import model.PersonDirectory;
import model.VitalSigns;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.PieDataset;

/**
 *
 * @author deepv
 */
public class ParentPanel extends javax.swing.JPanel {

    PersonDirectory people;
    PersonDirectory peopleForHouse;
    PatientDirectory patientDir;
    EncounterHistory encounterHistory;
    int id;
    HashMap encounterHistoryMap;
    ArrayList<Encounter> encounterArrayList = new ArrayList<>();
    List<Person> peopleInTheHouseList = new ArrayList<>();
    List<House> allHouses;
    List<Community> allCommunities;
    List<House> housesOfACommunity = new ArrayList<>();
    List<Community> communitiesOfACity = new ArrayList<>();
    String isPatient;
    City city;
    ArrayList<Community> community;
    HashMap houseMap;
    HashMap communityMap;
    HashMap cityMap;
    House house;
    Community community1;

    /**
     * Creates new form ParentPanel
     */
    public ParentPanel(PersonDirectory people, PatientDirectory patientDir, EncounterHistory encounterHistory, House house, Community communities, City city) {
        initComponents();
        this.people = people;
        this.patientDir = patientDir;
        this.encounterHistory = encounterHistory;
        this.house = house;
        this.community1 = communities;
        this.city = city;
        this.allHouses = new ArrayList<>();
        this.allCommunities = new ArrayList<>();

        if (city != null && city.getCommunities() != null && !city.getCommunities().isEmpty()) {
            community = city.getAllCommunities();
        }

        btnPreviousReports.setVisible(false);
        pnlTable.setVisible(false);

        // Populate the JTable
        if (this.people != null) {
            populateTable();
        }

        // Style the JTable header
        JTableHeader tableHeader = tblDashboard.getTableHeader();
        tableHeader.setFont(new Font("Segoe UI", Font.BOLD, 12));
        ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        ViewAllProfilePanel = new javax.swing.JPanel();
        lblBorder4 = new javax.swing.JLabel();
        lblBorder2 = new javax.swing.JLabel();
        lblHeader1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDashboard = new javax.swing.JTable();
        btnAddVitals = new javax.swing.JButton();
        btnCreateProfile = new javax.swing.JButton();
        btnUpdateProfile = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnStatistics = new javax.swing.JButton();
        CreateProfilePanel = new javax.swing.JPanel();
        lblBorder3 = new javax.swing.JLabel();
        lblBorder1 = new javax.swing.JLabel();
        lblHeader = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblLastname = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblHouseNum = new javax.swing.JLabel();
        lblCommunity = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        txtHouseNum = new javax.swing.JTextField();
        txtCommunity = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        btnSaveProfile = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        AddVitalsPanel = new javax.swing.JPanel();
        lblBorder7 = new javax.swing.JLabel();
        lblBorder8 = new javax.swing.JLabel();
        lblHeader3 = new javax.swing.JLabel();
        lblTemperature = new javax.swing.JLabel();
        lblPressure = new javax.swing.JLabel();
        lblPulse = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        txtPressure = new javax.swing.JTextField();
        txtPulse = new javax.swing.JTextField();
        btnSaveVitals = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        btnPreviousReports = new javax.swing.JButton();
        pnlTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPreviousReports = new javax.swing.JTable();
        UpdateProfilePanel = new javax.swing.JPanel();
        lblBorder5 = new javax.swing.JLabel();
        lblBorder6 = new javax.swing.JLabel();
        lblHeader2 = new javax.swing.JLabel();
        lblIdUpdate = new javax.swing.JLabel();
        lblNameUpdate = new javax.swing.JLabel();
        lblAgeUpdate = new javax.swing.JLabel();
        lblHouseNumUpdat = new javax.swing.JLabel();
        lblCommunityUpdate = new javax.swing.JLabel();
        lblCityUpdate = new javax.swing.JLabel();
        txtIdUpdate = new javax.swing.JTextField();
        txtNameUpdate = new javax.swing.JTextField();
        txtAgeUpdate = new javax.swing.JTextField();
        txtHouseNumUpdate = new javax.swing.JTextField();
        txtCommunityUpdate = new javax.swing.JTextField();
        txtCityUpdate = new javax.swing.JTextField();
        btnSaveProfile1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        StatisticsPanel = new javax.swing.JPanel();
        lblBorder11 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        lblHeader5 = new javax.swing.JLabel();
        lblBorder12 = new javax.swing.JLabel();
        pnlChart = new javax.swing.JPanel();

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        ViewAllProfilePanel.setBackground(new java.awt.Color(239, 232, 232));

        lblBorder4.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder4.setOpaque(true);

        lblBorder2.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder2.setOpaque(true);

        lblHeader1.setBackground(new java.awt.Color(239, 232, 232));
        lblHeader1.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblHeader1.setForeground(new java.awt.Color(0, 0, 0));
        lblHeader1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader1.setText("<html>View <b><span  font color=\"rgb(255,102,102)\">Profiles</span></b></html>");
        lblHeader1.setOpaque(true);

        tblDashboard.setBackground(new java.awt.Color(255, 255, 255));
        tblDashboard.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblDashboard.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NAME", "AGE", "HOUSE NUM.", "COMMUNITY", "CITY", "IS PATIENT?"
            }
        ));
        tblDashboard.setGridColor(new java.awt.Color(255, 0, 51));
        tblDashboard.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblDashboard.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(tblDashboard);

        btnAddVitals.setBackground(new java.awt.Color(255, 255, 255));
        btnAddVitals.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddVitals.setForeground(new java.awt.Color(0, 153, 153));
        btnAddVitals.setText("Add Vitals");
        btnAddVitals.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAddVitals.setFocusPainted(false);
        btnAddVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVitalsActionPerformed(evt);
            }
        });

        btnCreateProfile.setBackground(new java.awt.Color(255, 255, 255));
        btnCreateProfile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnCreateProfile.setForeground(new java.awt.Color(0, 153, 153));
        btnCreateProfile.setText("Create Profile");
        btnCreateProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCreateProfile.setFocusPainted(false);
        btnCreateProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateProfileActionPerformed(evt);
            }
        });

        btnUpdateProfile.setBackground(new java.awt.Color(255, 255, 255));
        btnUpdateProfile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnUpdateProfile.setForeground(new java.awt.Color(0, 153, 153));
        btnUpdateProfile.setText("Update Profile");
        btnUpdateProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdateProfile.setFocusPainted(false);
        btnUpdateProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProfileActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 255, 255));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(204, 0, 0));
        btnDelete.setText("Delete Profile");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFocusPainted(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnStatistics.setBackground(new java.awt.Color(204, 255, 204));
        btnStatistics.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnStatistics.setForeground(new java.awt.Color(0, 153, 51));
        btnStatistics.setText("Stats");
        btnStatistics.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnStatistics.setFocusPainted(false);
        btnStatistics.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStatisticsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewAllProfilePanelLayout = new javax.swing.GroupLayout(ViewAllProfilePanel);
        ViewAllProfilePanel.setLayout(ViewAllProfilePanelLayout);
        ViewAllProfilePanelLayout.setHorizontalGroup(
            ViewAllProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBorder4, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
            .addComponent(lblBorder2, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewAllProfilePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ViewAllProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewAllProfilePanelLayout.createSequentialGroup()
                        .addComponent(lblHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(203, 203, 203))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewAllProfilePanelLayout.createSequentialGroup()
                        .addGroup(ViewAllProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete)
                            .addGroup(ViewAllProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(ViewAllProfilePanelLayout.createSequentialGroup()
                                    .addComponent(btnCreateProfile)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnUpdateProfile)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnAddVitals)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnStatistics))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40))))
        );
        ViewAllProfilePanelLayout.setVerticalGroup(
            ViewAllProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewAllProfilePanelLayout.createSequentialGroup()
                .addComponent(lblBorder4, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblHeader1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(ViewAllProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddVitals)
                    .addComponent(btnCreateProfile)
                    .addComponent(btnUpdateProfile)
                    .addComponent(btnStatistics))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 290, Short.MAX_VALUE)
                .addComponent(lblBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLayeredPane1.add(ViewAllProfilePanel, "card3");

        CreateProfilePanel.setBackground(new java.awt.Color(239, 232, 232));

        lblBorder3.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder3.setOpaque(true);

        lblBorder1.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder1.setOpaque(true);

        lblHeader.setBackground(new java.awt.Color(239, 232, 232));
        lblHeader.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblHeader.setForeground(new java.awt.Color(0, 0, 0));
        lblHeader.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader.setText("<html>Create a <b><span  font color=\"rgb(255,102,102)\">Profile</span></b></html> ");
        lblHeader.setOpaque(true);

        lblFirstName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblFirstName.setText("First Name :");

        lblLastname.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblLastname.setText("Last Name :");

        lblAge.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAge.setText("Age :");

        lblHouseNum.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHouseNum.setText("House No. :");

        lblCommunity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCommunity.setText("Community :");

        lblCity.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCity.setText("City :");

        txtFirstName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFirstNameActionPerformed(evt);
            }
        });

        txtLastName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtAge.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtHouseNum.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtCommunity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtCity.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnSaveProfile.setBackground(new java.awt.Color(215, 254, 211));
        btnSaveProfile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSaveProfile.setForeground(new java.awt.Color(72, 151, 64));
        btnSaveProfile.setText("SAVE PROFILE");
        btnSaveProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProfileActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("BACK");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.setFocusPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CreateProfilePanelLayout = new javax.swing.GroupLayout(CreateProfilePanel);
        CreateProfilePanel.setLayout(CreateProfilePanelLayout);
        CreateProfilePanelLayout.setHorizontalGroup(
            CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBorder1, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
            .addComponent(lblBorder3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(CreateProfilePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton3)
                .addGap(117, 117, 117)
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CreateProfilePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSaveProfile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(CreateProfilePanelLayout.createSequentialGroup()
                                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFirstName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblLastname, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAge, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblHouseNum, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCommunity, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCity, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHouseNum, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        CreateProfilePanelLayout.setVerticalGroup(
            CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CreateProfilePanelLayout.createSequentialGroup()
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CreateProfilePanelLayout.createSequentialGroup()
                        .addComponent(lblBorder3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CreateProfilePanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton3)))
                .addGap(112, 112, 112)
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastname)
                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAge)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouseNum)
                    .addComponent(txtHouseNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunity)
                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(CreateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(btnSaveProfile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 154, Short.MAX_VALUE)
                .addComponent(lblBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLayeredPane1.add(CreateProfilePanel, "card2");

        AddVitalsPanel.setBackground(new java.awt.Color(239, 232, 232));

        lblBorder7.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder7.setOpaque(true);

        lblBorder8.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder8.setOpaque(true);

        lblHeader3.setBackground(new java.awt.Color(239, 232, 232));
        lblHeader3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblHeader3.setForeground(new java.awt.Color(0, 0, 0));
        lblHeader3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader3.setText("<html>Add <b><span  font color=\"rgb(255,102,102)\">Vitals</span></b></html> ");
        lblHeader3.setOpaque(true);

        lblTemperature.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblTemperature.setText("Temperature :");

        lblPressure.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPressure.setText("Blood Pressure :");

        lblPulse.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblPulse.setText("Pulse :");

        txtTemperature.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtTemperature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTemperatureActionPerformed(evt);
            }
        });

        txtPressure.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtPulse.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnSaveVitals.setBackground(new java.awt.Color(215, 254, 211));
        btnSaveVitals.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSaveVitals.setForeground(new java.awt.Color(72, 151, 64));
        btnSaveVitals.setText("SAVE VITALS");
        btnSaveVitals.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveVitals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveVitalsActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton5.setText("BACK");
        jButton5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton5.setFocusPainted(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        lblId.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblId.setText("ID: ");

        txtId.setEditable(false);
        txtId.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        lblName.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblName.setText("Name: ");

        txtName.setEditable(false);
        txtName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnPreviousReports.setBackground(new java.awt.Color(255, 204, 102));
        btnPreviousReports.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnPreviousReports.setForeground(new java.awt.Color(204, 102, 0));
        btnPreviousReports.setText("PREVIOUS REPORTS");
        btnPreviousReports.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPreviousReports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousReportsActionPerformed(evt);
            }
        });

        pnlTable.setBackground(new java.awt.Color(239, 232, 232));

        tblPreviousReports.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        tblPreviousReports.setForeground(new java.awt.Color(0, 0, 0));
        tblPreviousReports.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "DATE/TIME", "TEMPERATURE", "PRESSURE", "PULSE"
            }
        ));
        tblPreviousReports.setSelectionBackground(new java.awt.Color(255, 204, 204));
        tblPreviousReports.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane2.setViewportView(tblPreviousReports);

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 444, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addGap(0, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout AddVitalsPanelLayout = new javax.swing.GroupLayout(AddVitalsPanel);
        AddVitalsPanel.setLayout(AddVitalsPanelLayout);
        AddVitalsPanelLayout.setHorizontalGroup(
            AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBorder8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblBorder7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                                .addComponent(jButton5)
                                .addGap(117, 117, 117)
                                .addComponent(lblHeader3, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnPreviousReports)))
                    .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSaveVitals, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTemperature, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPressure, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPulse, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblId, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblName, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(156, Short.MAX_VALUE))
        );
        AddVitalsPanelLayout.setVerticalGroup(
            AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddVitalsPanelLayout.createSequentialGroup()
                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                        .addComponent(lblBorder7, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHeader3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddVitalsPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton5)))
                .addGap(18, 18, 18)
                .addComponent(btnPreviousReports)
                .addGap(31, 31, 31)
                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblName))
                .addGap(16, 16, 16)
                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblId)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPressure)
                    .addComponent(txtPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(AddVitalsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPulse)
                    .addComponent(txtPulse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(btnSaveVitals)
                .addGap(33, 33, 33)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addComponent(lblBorder8, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLayeredPane1.add(AddVitalsPanel, "card4");

        UpdateProfilePanel.setBackground(new java.awt.Color(239, 232, 232));

        lblBorder5.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder5.setOpaque(true);

        lblBorder6.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder6.setOpaque(true);

        lblHeader2.setBackground(new java.awt.Color(239, 232, 232));
        lblHeader2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblHeader2.setForeground(new java.awt.Color(0, 0, 0));
        lblHeader2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader2.setText("<html>Update <b><span  font color=\"rgb(255,102,102)\">Profile</span></b></html> ");
        lblHeader2.setOpaque(true);

        lblIdUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblIdUpdate.setText("ID :");

        lblNameUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblNameUpdate.setText("Name :");

        lblAgeUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblAgeUpdate.setText("Age :");

        lblHouseNumUpdat.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblHouseNumUpdat.setText("House No. :");

        lblCommunityUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCommunityUpdate.setText("Community :");

        lblCityUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblCityUpdate.setText("City :");

        txtIdUpdate.setEditable(false);
        txtIdUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txtIdUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdUpdateActionPerformed(evt);
            }
        });

        txtNameUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtAgeUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtHouseNumUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtCommunityUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        txtCityUpdate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        btnSaveProfile1.setBackground(new java.awt.Color(215, 254, 211));
        btnSaveProfile1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSaveProfile1.setForeground(new java.awt.Color(72, 151, 64));
        btnSaveProfile1.setText("SAVE UPDATES");
        btnSaveProfile1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSaveProfile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveProfile1ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton4.setText("BACK");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.setFocusPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UpdateProfilePanelLayout = new javax.swing.GroupLayout(UpdateProfilePanel);
        UpdateProfilePanel.setLayout(UpdateProfilePanelLayout);
        UpdateProfilePanelLayout.setHorizontalGroup(
            UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblBorder6, javax.swing.GroupLayout.DEFAULT_SIZE, 704, Short.MAX_VALUE)
            .addComponent(lblBorder5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(UpdateProfilePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jButton4)
                .addGap(117, 117, 117)
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(UpdateProfilePanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSaveProfile1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(UpdateProfilePanelLayout.createSequentialGroup()
                                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblIdUpdate, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblNameUpdate, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblAgeUpdate, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblHouseNumUpdat, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCommunityUpdate, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblCityUpdate, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtIdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAgeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtHouseNumUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCommunityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        UpdateProfilePanelLayout.setVerticalGroup(
            UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, UpdateProfilePanelLayout.createSequentialGroup()
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(UpdateProfilePanelLayout.createSequentialGroup()
                        .addComponent(lblBorder5, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblHeader2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(UpdateProfilePanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jButton4)))
                .addGap(112, 112, 112)
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIdUpdate)
                    .addComponent(txtIdUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNameUpdate)
                    .addComponent(txtNameUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAgeUpdate)
                    .addComponent(txtAgeUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHouseNumUpdat)
                    .addComponent(txtHouseNumUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunityUpdate)
                    .addComponent(txtCommunityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(UpdateProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCityUpdate)
                    .addComponent(txtCityUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addComponent(btnSaveProfile1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(lblBorder6, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLayeredPane1.add(UpdateProfilePanel, "card5");

        StatisticsPanel.setBackground(new java.awt.Color(239, 232, 232));

        lblBorder11.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder11.setOpaque(true);

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton7.setText("BACK");
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.setFocusPainted(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        lblHeader5.setBackground(new java.awt.Color(239, 232, 232));
        lblHeader5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lblHeader5.setForeground(new java.awt.Color(0, 0, 0));
        lblHeader5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblHeader5.setText("<html>STATISTIC<b><span  font color=\"rgb(255,102,102)\">s</span></b></html> ");
        lblHeader5.setOpaque(true);

        lblBorder12.setBackground(new java.awt.Color(255, 204, 204));
        lblBorder12.setOpaque(true);

        pnlChart.setLayout(new javax.swing.BoxLayout(pnlChart, javax.swing.BoxLayout.LINE_AXIS));

        javax.swing.GroupLayout StatisticsPanelLayout = new javax.swing.GroupLayout(StatisticsPanel);
        StatisticsPanel.setLayout(StatisticsPanelLayout);
        StatisticsPanelLayout.setHorizontalGroup(
            StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsPanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(pnlChart, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
            .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(StatisticsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblBorder12, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                        .addComponent(lblBorder11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(StatisticsPanelLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(jButton7)
                            .addGap(117, 117, 117)
                            .addComponent(lblHeader5, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap()))
        );
        StatisticsPanelLayout.setVerticalGroup(
            StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StatisticsPanelLayout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addComponent(pnlChart, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(62, Short.MAX_VALUE))
            .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(StatisticsPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(StatisticsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(StatisticsPanelLayout.createSequentialGroup()
                            .addComponent(lblBorder11, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblHeader5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(StatisticsPanelLayout.createSequentialGroup()
                            .addGap(43, 43, 43)
                            .addComponent(jButton7)))
                    .addGap(551, 551, 551)
                    .addComponent(lblBorder12, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLayeredPane1.add(StatisticsPanel, "card6");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFirstNameActionPerformed

    /**
     * Save the person profile details
     *
     * @param evt
     */
    private void btnSaveProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProfileActionPerformed
        Person person = people.addPeople();
        person.setFirstName(txtFirstName.getText());
        person.setLastName(txtLastName.getText());
        person.setAge(txtAge.getText());
        person.setResidence(txtHouseNum.getText());
        person.setCommunity(txtCommunity.getText());
        person.setCity(txtCity.getText());

        // Assign a random number as the ID
        Random randomNum = new Random();
        int randomCustomerId = randomNum.nextInt(65536 - 32768);
        person.setId(randomCustomerId);

        // Assign people to a house
        peopleInTheHouseList = people.getPeople().stream().filter(x -> x.getResidence().equals(txtHouseNum.getText())).collect(Collectors.toList());
        if (houseMap != null && !houseMap.isEmpty()) {
            houseMap = house.getHouseMap();
        } else {
            houseMap = new HashMap<>();
        }
        houseMap.put(txtHouseNum.getText(), peopleInTheHouseList);
        house.setHouseMap(houseMap);
        house.setCommunity(txtCommunity.getText());
        allHouses.add(house);

        
        // Assign houses to a community
        housesOfACommunity = allHouses.stream().filter(x -> x.getCommunity().equals(txtCommunity.getText())).collect(Collectors.toList());
        if (communityMap != null && !communityMap.isEmpty()) {
            communityMap = community1.getCommunityMap();
        } else {
            communityMap = new HashMap<>();
        }
        communityMap.put(txtCommunity.getText(), housesOfACommunity);
        community1.setCommunityMap(communityMap);
        community1.setCity(txtCity.getText());
        allCommunities.add(community1);
        
        // Assign communities to a city
        communitiesOfACity = allCommunities.stream().filter(x -> x.getCity().equals(txtCity.getText())).collect(Collectors.toList());
        if(cityMap != null && !cityMap.isEmpty()){
            cityMap = city.getCityMap();
        } else {
            cityMap = new HashMap<>();
        }
        cityMap.put(txtCity.getText(), communitiesOfACity);
        city.setCityMap(cityMap);

        JOptionPane.showMessageDialog(this, "Profile saved. Your ID is: " + randomCustomerId);
        txtFirstName.setText("");
        txtLastName.setText("");
        txtAge.setText("");
        txtHouseNum.setText("");
        txtCommunity.setText("");
        txtCity.setText("");

        // Switch the card layout
        switchPanels(ViewAllProfilePanel);

        // Populate the table
        populateTable();
    }//GEN-LAST:event_btnSaveProfileActionPerformed

    /**
     * Create Profile button click, switch the card layout to the creation panel
     *
     * @param evt
     */
    private void btnCreateProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateProfileActionPerformed
        switchPanels(CreateProfilePanel);
    }//GEN-LAST:event_btnCreateProfileActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        switchPanels(ViewAllProfilePanel);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnAddVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVitalsActionPerformed
        int selectedRowIndex = tblDashboard.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row first");
            return;
        } else {

            // Style the JTable header
            JTableHeader tableHeader = tblPreviousReports.getTableHeader();
            tableHeader.setFont(new Font("Segoe UI", Font.BOLD, 12));
            ((DefaultTableCellRenderer) tableHeader.getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);

            switchPanels(AddVitalsPanel);
            DefaultTableModel model = (DefaultTableModel) tblDashboard.getModel();
            Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);
            VitalSigns vitalSigns = new VitalSigns(selectedPerson.getId(), selectedPerson.getFirstName(), selectedPerson.getLastName());
            txtId.setText(String.valueOf(vitalSigns.getId()));
            id = vitalSigns.getId();
            txtName.setText(vitalSigns.getFullName());

            // if the person is a patient already, display previous reports
            if (selectedPerson.isIsPatient()) {
                btnPreviousReports.setVisible(true);
            }
        }
    }//GEN-LAST:event_btnAddVitalsActionPerformed

    private void txtTemperatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTemperatureActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTemperatureActionPerformed

    private void btnSaveVitalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveVitalsActionPerformed
        int selectedRowIndex = tblDashboard.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) tblDashboard.getModel();
        Person selectedPerson = (Person) model.getValueAt(selectedRowIndex, 0);

        // map the vital signs attributes
        VitalSigns vitalSigns = new VitalSigns(selectedPerson.getId(), selectedPerson.getFirstName(), selectedPerson.getLastName());
        vitalSigns.setTemperature(Integer.parseInt(txtTemperature.getText()));
        vitalSigns.setBloodPressure(Integer.parseInt(txtPressure.getText()));
        vitalSigns.setPulse(Integer.parseInt(txtPulse.getText()));
        selectedPerson.updateAsAPatient(selectedPerson.getId(), people);
        Calendar calendar = Calendar.getInstance();
        vitalSigns.setDate(calendar.getTime());

        // add the persons object to patients
        Patient patient = patientDir.addPatients();
        patient.setPerson(selectedPerson);

        // Initialize the encounter history arraylist
        if (encounterHistoryMap != null && !encounterHistoryMap.isEmpty() && encounterHistoryMap.get(selectedPerson.getId()) != null) {
            encounterArrayList = encounterHistory.getEncounterHistory();
        } else {
            encounterArrayList = new ArrayList<>();
        }

        // map the encounter attributes
        Encounter encounter = new Encounter();
        encounter.setVitalSigns(vitalSigns);
        encounterArrayList.add(encounter);
        encounterHistory.setEncounterHistory(encounterArrayList);
        patient.setEncounterHistory(encounterHistory);

        // Initialize the encounter history HashMap
        if (encounterHistoryMap != null && !encounterHistoryMap.isEmpty()) {
            encounterHistoryMap = this.encounterHistory.getEncounterHistoryMap();
        } else {
            encounterHistoryMap = new HashMap<>();
        }

        // Put values into the HashMap
        encounterHistoryMap.put(selectedPerson.getId(), encounterHistory.getEncounterHistory());
        encounterHistory.setEncounterHistoryMap(encounterHistoryMap);

        JOptionPane.showMessageDialog(this, "Vitals added for ID: " + selectedPerson.getId());
        txtName.setText("");
        txtId.setText("");
        txtTemperature.setText("");
        txtPressure.setText("");
        txtPulse.setText("");
        pnlTable.setVisible(false);
        switchPanels(ViewAllProfilePanel);
        populateTable();
    }//GEN-LAST:event_btnSaveVitalsActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        pnlTable.setVisible(false);
        btnPreviousReports.setVisible(false);
        switchPanels(ViewAllProfilePanel);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btnPreviousReportsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousReportsActionPerformed
        pnlTable.setVisible(true);
        Patient patient = returnPatientObject(id);
        populatePreviousReports(encounterHistoryMap, id);
    }//GEN-LAST:event_btnPreviousReportsActionPerformed

    private void btnUpdateProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProfileActionPerformed
        int selectedRowIndex = tblDashboard.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select the profile you want to update");
            return;
        } else {
            switchPanels(UpdateProfilePanel);
            DefaultTableModel model = (DefaultTableModel) tblDashboard.getModel();
            Person selectedIndividual = (Person) model.getValueAt(selectedRowIndex, 0);
            id = selectedIndividual.getId();
            txtIdUpdate.setText(String.valueOf(selectedIndividual.getId()));
            txtNameUpdate.setText(selectedIndividual.getFirstName() + ' ' + selectedIndividual.getLastName());
            txtAgeUpdate.setText(selectedIndividual.getAge());
            txtCityUpdate.setText(selectedIndividual.getCity());
            txtCommunityUpdate.setText(selectedIndividual.getCommunity());
            txtHouseNumUpdate.setText(selectedIndividual.getResidence());
        }
    }//GEN-LAST:event_btnUpdateProfileActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRowIndex = tblDashboard.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblDashboard.getModel();
        Person selectedIndividual = (Person) model.getValueAt(selectedRowIndex, 0);

        // if the person being deleted is a patient, remove the references for that person from the encounter history
        if (selectedIndividual.isIsPatient()) {
            patientDir.getPatientList().remove(selectedIndividual);
            encounterHistoryMap.remove(id);
            encounterHistory.setEncounterHistoryMap(encounterHistoryMap);
        }

        // after deleting the references, delete the actual person from person directory
        people.getPeople().remove(selectedIndividual);
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtIdUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdUpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdUpdateActionPerformed

    private void btnSaveProfile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveProfile1ActionPerformed
        Person person = new Person();
        person.setFirstName(txtNameUpdate.getText().substring(0, txtNameUpdate.getText().indexOf(' ')));
        person.setLastName(txtNameUpdate.getText().substring(txtNameUpdate.getText().indexOf(' '), txtNameUpdate.getText().length()));
        person.setAge(txtAgeUpdate.getText());
        person.setCity(txtCityUpdate.getText());
        person.setCommunity(txtCommunityUpdate.getText());
        person.setResidence(txtHouseNumUpdate.getText());
        person.setId(id);

        if (encounterHistoryMap != null && encounterHistoryMap.get(id) != null) {
            person.setIsPatient(true);
        }

        Person personToBeUpdated = people.getPeople().stream().filter(x -> x.getId() == id).findAny().orElse(null);
        int indexOfPersonToBeUpdated = people.getPeople().indexOf(personToBeUpdated);
        people.getPeople().set(indexOfPersonToBeUpdated, person);
        JOptionPane.showMessageDialog(this, "Profile update for ID: " + id);
        txtNameUpdate.setText("");
        txtAgeUpdate.setText("");
        txtCityUpdate.setText("");
        txtCommunityUpdate.setText("");
        switchPanels(ViewAllProfilePanel);
        populateTable();
    }//GEN-LAST:event_btnSaveProfile1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        switchPanels(ViewAllProfilePanel);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        switchPanels(ViewAllProfilePanel);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btnStatisticsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStatisticsActionPerformed
        switchPanels(StatisticsPanel);
        DefaultCategoryDataset dcd = new DefaultCategoryDataset();
        dcd.setValue(78.80, "Marks", "Ganesh");
        dcd.setValue(68.80, "Marks", "Dinesh");
        dcd.setValue(88.80, "Marks", "John");
        dcd.setValue(98.80, "Marks", "Alisha");
        dcd.setValue(58.80, "Marks", "Sachin");

        JFreeChart jchart = ChartFactory.createBarChart3D("Student Record", "Student Name", "Studen Marks", dcd, PlotOrientation.VERTICAL, true, true, false);
        CategoryPlot plot = jchart.getCategoryPlot();
        plot.setRangeGridlinePaint(Color.black);

        ChartFrame chartFrm = new ChartFrame("Student Record", jchart, true);
        chartFrm.setVisible(true);
        chartFrm.setSize(500, 400);
        ChartPanel chartPanel = new ChartPanel(jchart);
        chartFrm.dispose();
        pnlChart.removeAll();
        pnlChart.add(chartPanel);
        pnlChart.updateUI();
    }//GEN-LAST:event_btnStatisticsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddVitalsPanel;
    private javax.swing.JPanel CreateProfilePanel;
    private javax.swing.JPanel StatisticsPanel;
    private javax.swing.JPanel UpdateProfilePanel;
    private javax.swing.JPanel ViewAllProfilePanel;
    private javax.swing.JButton btnAddVitals;
    private javax.swing.JButton btnCreateProfile;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPreviousReports;
    private javax.swing.JButton btnSaveProfile;
    private javax.swing.JButton btnSaveProfile1;
    private javax.swing.JButton btnSaveVitals;
    private javax.swing.JButton btnStatistics;
    private javax.swing.JButton btnUpdateProfile;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAgeUpdate;
    private javax.swing.JLabel lblBorder1;
    private javax.swing.JLabel lblBorder11;
    private javax.swing.JLabel lblBorder12;
    private javax.swing.JLabel lblBorder2;
    private javax.swing.JLabel lblBorder3;
    private javax.swing.JLabel lblBorder4;
    private javax.swing.JLabel lblBorder5;
    private javax.swing.JLabel lblBorder6;
    private javax.swing.JLabel lblBorder7;
    private javax.swing.JLabel lblBorder8;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityUpdate;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunityUpdate;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblHeader;
    private javax.swing.JLabel lblHeader1;
    private javax.swing.JLabel lblHeader2;
    private javax.swing.JLabel lblHeader3;
    private javax.swing.JLabel lblHeader5;
    private javax.swing.JLabel lblHouseNum;
    private javax.swing.JLabel lblHouseNumUpdat;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIdUpdate;
    private javax.swing.JLabel lblLastname;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameUpdate;
    private javax.swing.JLabel lblPressure;
    private javax.swing.JLabel lblPulse;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JPanel pnlChart;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JTable tblDashboard;
    private javax.swing.JTable tblPreviousReports;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtAgeUpdate;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCityUpdate;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtCommunityUpdate;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtHouseNum;
    private javax.swing.JTextField txtHouseNumUpdate;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdUpdate;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNameUpdate;
    private javax.swing.JTextField txtPressure;
    private javax.swing.JTextField txtPulse;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables

    /**
     * Populate JTable
     *
     */
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblDashboard.getModel();
        model.setRowCount(0);

        for (Person person : people.getPeople()) {
            Object[] row = new Object[7];
            row[0] = person;
            row[1] = person.getFirstName() + ' ' + person.getLastName();
            row[2] = person.getAge();
            row[3] = person.getResidence();
            row[4] = person.getCommunity();
            row[5] = person.getCity();

            if (person.isIsPatient()) {
                row[6] = "YES";
            } else {
                row[6] = "NO";
            }
            model.addRow(row);
        }
        Patient patient = new Patient();
    }

    // Return Person Directory list
    public PersonDirectory returnPersonDirectory() {
        return people;
    }

    // Return Patient Directory list
    public PatientDirectory returnPatientDirectory() {
        return patientDir;
    }

    // Return Encounter History list
    public EncounterHistory returnEncounterHistory() {
        return encounterHistory;
    }

    /**
     * Populate encounter history
     *
     */
    private void populatePreviousReports(HashMap<Integer, ArrayList<Encounter>> encounterHistoryMap1, int id) {
        DefaultTableModel model = (DefaultTableModel) tblPreviousReports.getModel();
        model.setRowCount(0);

        for (Map.Entry<Integer, ArrayList<Encounter>> mapIterator : encounterHistoryMap1.entrySet()) {
            if (mapIterator.getKey() == id) {
                for (Encounter enc : mapIterator.getValue()) {
                    Object[] row = new Object[5];
                    row[0] = id;
                    row[1] = enc.getVitalSigns().getDate();
                    row[2] = enc.getVitalSigns().getTemperature();
                    row[3] = enc.getVitalSigns().getBloodPressure();
                    row[4] = enc.getVitalSigns().getPulse();
                    model.addRow(row);
                }
            }
        }
    }

    /**
     * Return a patient object whose id matches
     *
     * @param id
     * @return
     */
    private Patient returnPatientObject(int id) {
        Patient newPatient = new Patient();
        for (Patient patient : patientDir.getPatientList()) {
            if (patient.getPerson().getId() == id) {
                newPatient = patient;
            }
        }
        return newPatient;
    }

    public House returnHouseObj() {
        return house;
    }

    public Community returnCommunityObject() {
        return community1;
    }
    
    public City returnCityObject(){
        return city;
    }

    /**
     * switch panel to the input component
     *
     * @param component
     */
    private void switchPanels(Component component) {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(component);
        jLayeredPane1.revalidate();
        jLayeredPane1.repaint();
    }

    private void updateHouseResidents() {
        peopleInTheHouseList = people.getPeople().stream().filter(x -> x.getResidence().equals(txtHouseNum.getText())).collect(Collectors.toList());

        if (houseMap != null && !houseMap.isEmpty()) {
            houseMap = house.getHouseMap();
        } else {
            houseMap = new HashMap<>();
        }

        houseMap.put(txtHouseNum.getText(), peopleInTheHouseList);
        house.setHouseMap(houseMap);
    }
}
